name:                bitstring
version:             0.1.0.0
github:              "kozlov721/bitstring"
license:             BSD3
author:              "Martin Kozlovsky"
maintainer:          "kozlovsky.m7@gmail.com"
copyright:           "2022 Martin Kozlovsky"

extra-source-files:
- README.md
- ChangeLog.md

synopsis:            Compact and efficient wrapper around lazy bytestring
category:            Data

description: |
  Fast and simple implementation of bit strings. 'BitString' is a wrapper
  around @Data.ByteString.Lazy@. It makes possible to build 'ByteString'
  from single bits. It also allows for a fast conversion from and to
  'ByteString' and implements similar API. It is therefore easy to use together
  with 'ByteString's for tasks like parsing binary headers, constructing
  codes etc.
  .
  Two versions of 'BitString's are provided:
  .
    * @Data.BitString@ for classical usage.
  .
    * @Data.BitString.BigEndian@, which stores bytes in the bytestring in
    big-endian format.
  .
  These modules are intended to be imported @qualified@, to avoid name
  clashes with 'Prelude' functions, e.g.
  .
  > import qualified Data.BitString as BS

dependencies:
- base >= 4.7 && < 5
- bytestring >= 0.11.1.0


library:
  source-dirs: src
  ghc-options:
    - -O2

tests:
  bitstring-test:
    main:                Spec.hs
    source-dirs:         test
    ghc-options:
    - -threaded
    - -rtsopts
    - -with-rtsopts=-N
    dependencies:
    - bitstring
    - HUnit
    - extra
    - QuickCheck
  bitstring-bigendian-test:
    main:                Spec.hs
    source-dirs:         test
    ghc-options:
    - -threaded
    - -rtsopts
    - -with-rtsopts=-N
    cpp-options:
    - -DBIGENDIAN
    dependencies:
    - bitstring
    - HUnit
    - extra
    - QuickCheck
